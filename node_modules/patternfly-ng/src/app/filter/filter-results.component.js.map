{"version":3,"file":"filter-results.component.js","sourceRoot":"","sources":["../../../../build/src/app/filter/filter-results.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  DoCheck,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { Filter } from './filter';\nimport { FilterConfig } from './filter-config';\n\nimport { cloneDeep, defaults, isEqual } from 'lodash';\n\n/**\n * Component for the filter results\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-filter-results',\n  styles: [`.filter-pf a{cursor:pointer}`],\n  template: `<div class=\"filter-pf\" *ngIf=\"config && config.appliedFilters && config.appliedFilters.length > 0\"><div class=\"row toolbar-pf-results\"><div class=\"col-sm-12\"><h5 *ngIf=\"config.resultsCount >= 0\">{{config.resultsCount}} Results</h5><p *ngIf=\"config.appliedFilters.length > 0\">Active filters:</p><ul class=\"list-inline\"><li *ngFor=\"let filter of config.appliedFilters\"><span class=\"active-filter label label-info\">{{filter.field.title}}: {{filter.value}} <a><span class=\"pficon pficon-close\" (click)=\"clearFilter(filter)\"></span></a></span></li></ul><p><a class=\"clear-filters\" (click)=\"clearAllFilters()\" *ngIf=\"config.appliedFilters.length > 0\">Clear All Filters</a></p><div *ngIf=\"config.totalCount !== 0\" class=\"pf-table-view-selected-label\"><strong>{{config.selectedCount}}</strong> of <strong>{{config.totalCount}}</strong> selected</div></div></div></div>`\n})\nexport class FilterResultsComponent implements DoCheck, OnInit {\n  /**\n   * The filter config containing component properties\n   */\n  @Input() config: FilterConfig;\n\n  /**\n   * The event emitted when the clear action is selected\n   */\n  @Output('onClear') onClear = new EventEmitter();\n\n  private defaultConfig = {} as FilterConfig;\n  private prevConfig: FilterConfig;\n\n  /**\n   * The default constructor\n   */\n  constructor() {\n  }\n\n  // Initialization\n\n  /**\n   *  Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n  }\n\n  /**\n   *  Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n  }\n\n  /**\n   * Set up default config\n   */\n  protected setupConfig(): void {\n    if (this.config !== undefined) {\n      defaults(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n    this.prevConfig = cloneDeep(this.config);\n\n    if (this.config && this.config.appliedFilters === undefined) {\n      this.config.appliedFilters = [];\n    }\n    if (this.config && this.config.resultsCount === undefined) {\n      this.config.resultsCount = 0;\n    }\n    if (this.config && this.config.selectedCount === undefined) {\n      this.config.selectedCount = 0;\n    }\n    if (this.config && this.config.totalCount === undefined) {\n      this.config.totalCount = 0;\n    }\n  }\n\n  // Private\n\n  private clearFilter(filter: Filter): void {\n    let newFilters: Filter[] = [];\n    this.config.appliedFilters.forEach((appliedFilter) => {\n      if (appliedFilter.field.title !== filter.field.title\n          || appliedFilter.value !== filter.value) {\n        newFilters.push(appliedFilter);\n      }\n    });\n    this.config.appliedFilters = newFilters;\n    this.onClear.emit(this.config.appliedFilters);\n  }\n\n  private clearAllFilters(): void {\n    this.config.appliedFilters = [];\n    this.onClear.emit(this.config.appliedFilters);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}